AWSTemplateFormatVersion: 2010-09-09
Description: Enable AWS Config - based on https://s3-external-1.amazonaws.com/cloudformation-stackset-sample-templates-us-east-1/EnableAWSConfig.yml 

# Deployment - STACK SET:
# aws cloudformation create-stack-set --stack-set-name config-recorder-accounts --template-body file://config-recorder-accounts.yml --parameters file://config-recorder-accounts.json --capabilities CAPABILITY_NAMED_IAM --permission-model SELF_MANAGED

# aws cloudformation update-stack-set --stack-set-name config-recorder-accounts --template-body file://config-recorder-accounts.yml --parameters file://config-recorder-accounts.json --capabilities CAPABILITY_NAMED_IAM --permission-model SELF_MANAGED  

# aws cloudformation delete-stack-set --stack-set-name config-recorder-accounts


# -------------
# STACK SET INSTANCE:
# aws cloudformation create-stack-instances --stack-set-name config-recorder-accounts --deployment-targets Accounts="account1,account2" --regions "us-east-2" "us-east-1"  --operation-preferences FailureToleranceCount=2

# UPDATE
# aws cloudformation update-stack-instances --stack-set-name config-recorder-accounts --deployment-targets Accounts="account1,account2" --regions "us-east-2" "us-east-1" --operation-preferences FailureToleranceCount=2

# DELETE
# aws cloudformation delete-stack-instances --stack-set-name config-recorder-accounts --deployment-targets Accounts="account1,account2" --regions us-east-2 "us-east-1" --operation-preferences FailureToleranceCount=5,MaxConcurrentCount=10 --no-retain-stacks


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Recorder Configuration
        Parameters:
          - AllSupported
          - IncludeGlobalResourceTypes
          - ResourceTypes
      - Label:
          default: Delivery Channel Configuration
        Parameters:
          - DeliveryChannelName
          - Frequency
      - Label:
          default: Delivery Notifications
        Parameters:
          - TopicArn
          - NotificationEmail
    ParameterLabels:
      AllSupported:
        default: Support all resource types
      IncludeGlobalResourceTypes:
        default: Include global resource types
      ResourceTypes:
        default: List of resource types if not all supported
      DeliveryChannelName:
        default: Configuration delivery channel name
      Frequency:
        default: Snapshot delivery frequency
      TopicArn:
        default: SNS topic name
      NotificationEmail:
        default: Notification Email (optional)


Parameters:
  AggregationRegion:
    Description: region of the aggregator
    Type: String
  RecordingRegion:
    Description: region that is also recorded
    Type: String
  AggregatorAccountId:
    Description: account id of the aggregator account
    Type: String
  MemberAccountId:
    Description: account id of the member account
    Type: String

  AllSupported:
    Type: String
    Default: True
    Description: Indicates whether to record all supported resource types.
    AllowedValues:
      - True
      - False

  IncludeGlobalResourceTypes:
    Type: String
    Default: True
    Description: Indicates whether AWS Config records all supported global resource types.
    AllowedValues:
      - True
      - False

  ResourceTypes:
    Type: List<String>
    Description: A list of valid AWS resource types to include in this recording group, such as AWS::EC2::Instance or AWS::CloudTrail::Trail.
    Default: <All>

  DeliveryChannelName:
    Type: String
    Default: <Generated>
    Description: The name of the delivery channel.

  Frequency:
    Type: String
    Default: 1hour
    Description: The frequency with which AWS Config delivers configuration snapshots.
    AllowedValues:
      - 1hour
      - 3hours
      - 6hours
      - 12hours
      - 24hours

  TopicArn:
    Type: String
    Default: <New Topic>
    Description: The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic that AWS Config delivers notifications to.

  NotificationEmail:
    Type: String
    Default: <None>
    Description: Email address for AWS Config notifications (for new topics).

Conditions:
  IsAllSupported: !Equals
    - !Ref AllSupported
    - True
  IsGeneratedDeliveryChannelName: !Equals
    - !Ref DeliveryChannelName
    - <Generated>
  CreateTopic: !Equals
    - !Ref TopicArn
    - <New Topic>
  CreateSubscription: !And
    - !Condition CreateTopic
    - !Not
      - !Equals
        - !Ref NotificationEmail
        - <None>

Mappings:
  Settings:
    FrequencyMap:
      1hour   : One_Hour
      3hours  : Three_Hours
      6hours  : Six_Hours
      12hours : Twelve_Hours
      24hours : TwentyFour_Hours


Resources:
  AggregationAuthorizationAccAggrAccountR1:
    Type: AWS::Config::AggregationAuthorization
    Properties: 
      AuthorizedAccountId: !Ref AggregatorAccountId
      AuthorizedAwsRegion: !Ref AggregationRegion
  AggregationAuthorizationAccAggrAccountR2:
    Type: AWS::Config::AggregationAuthorization
    Properties: 
      AuthorizedAccountId: !Ref AggregatorAccountId
      AuthorizedAwsRegion: !Ref RecordingRegion
  AggregationAuthorizationAccMemberAccountR1:
    Type: AWS::Config::AggregationAuthorization
    Properties: 
      AuthorizedAccountId: !Ref MemberAccountId
      AuthorizedAwsRegion: !Ref AggregationRegion
  AggregationAuthorizationAccMemberAccountR2:
    Type: AWS::Config::AggregationAuthorization
    Properties: 
      AuthorizedAccountId: !Ref MemberAccountId
      AuthorizedAwsRegion: !Ref RecordingRegion

  # Config Aggregator Bucket
  ConfigAggrS3Bucket:                                   # Config Aggregator Bucket
    Type: AWS::S3::Bucket                         
    Properties:
      AccessControl: Private                            # Access Conrol
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketName: !Sub "config-aggr-${AWS::AccountId}-${AWS::Region}"
      BucketEncryption:                                 # Encryption
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: "s3bucket-config-aggr"
        - Key: Env
          Value: lab

  # Aggregator S3 Bucket policy
  ConfigAggrS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties : 
      Bucket: !Ref ConfigAggrS3Bucket
      PolicyDocument:
        Statement: 
          - 
            Principal: 
              AWS : 
                - !Ref AggregatorAccountId # member account
            Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - !Sub "arn:aws:s3:::config-aggr-${AWS::AccountId}-${AWS::Region}"
                  - "/*"
                  
  ConfigTopic:
    Condition: CreateTopic
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "config-topic-${AWS::AccountId}"
      DisplayName: AWS Config Notification Topic

  ConfigTopicPolicy:
    Condition: CreateTopic
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref ConfigTopic
      PolicyDocument:
        Statement:
          - Sid: AWSConfigSNSPolicy
            Action:
              - sns:Publish
            Effect: Allow
            Resource: !Ref ConfigTopic
            Principal:
              Service:
                - config.amazonaws.com

  EmailNotification:
    Condition: CreateSubscription
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotificationEmail
      Protocol: email
      TopicArn: !Ref ConfigTopic

  ConfigRecorderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    DependsOn:
      - ConfigTopicPolicy
    Properties:
      RoleARN: !GetAtt ConfigRecorderRole.Arn
      RecordingGroup:
        AllSupported: !Ref AllSupported
        IncludeGlobalResourceTypes: !Ref IncludeGlobalResourceTypes
        ResourceTypes: !If
          - IsAllSupported
          - !Ref AWS::NoValue
          - !Ref ResourceTypes

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    DependsOn:
      - ConfigTopicPolicy
    Properties:
      Name: !If
        - IsGeneratedDeliveryChannelName
        - !Ref AWS::NoValue
        - !Ref DeliveryChannelName
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: !FindInMap
          - Settings
          - FrequencyMap
          - !Ref Frequency
      S3BucketName: !Ref ConfigAggrS3Bucket
      SnsTopicARN: !If
        - CreateTopic
        - !Ref ConfigTopic
        - !Ref TopicArn

Outputs:
  ConfigAggrS3Bucket:
    Description: S3 Bucket for Config Aggregator
    Value: !Ref ConfigAggrS3Bucket
    Export: 
      Name: !Sub ${AWS::StackName}-ConfigAggrS3Bucket
  DomainName:
    Description: S3 Domain name for Bucket
    Value: !GetAtt [ConfigAggrS3Bucket, DomainName]
    Export:
      Name: !Sub ${AWS::StackName}-BucketDomainName
  ConfigAggrS3BucketPolicy:
    Description: ARN of the bucket policy 
    Value: ConfigAggrS3BucketPolicy
    Export: 
      Name: !Sub ${AWS::StackName}-ConfigAggrS3BucketPolicy